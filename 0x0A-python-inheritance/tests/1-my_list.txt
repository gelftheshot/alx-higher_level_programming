This is the test for 1-print_list

**** first let's  the class it self and chcek it's type out

    >>> mylist = __import__('1-my_list').MyList
    >>> tom = mylist()
    >>> type(tom)
    <class '1-my_list.MyList'>

***** then let's check if the sorted list works or not. 

    >>> tom = mylist([4,5,3,1,0])
    >>> tom.print_sorted()
    [0, 1, 3, 4, 5]

******* let's test for empty case

    >>> tom = mylist()
    >>> tom.print_sorted()
    []

******** let's try to append 

    >>> tom = mylist()
    >>> tom.append(88)
    >>> tom.append(34)
    >>> tom.append(24)
    >>> tom.append(12)
    >>> tom.append(19)
    >>> print(tom)
    [88, 34, 24, 12, 19]
    >>> tom.print_sorted()
    [12, 19, 24, 34, 88]
    >>> print(tom)
    [88, 34, 24, 12, 19]

*********let's test for none case

    >>> tom = mylist(None)
    Traceback (most recent call last):
    TypeError: 'NoneType' object is not iterable


*********let's test for more than one argument

    >>> my_list = mylist([1, 2], [3, 4])
    Traceback (most recent call last):
    TypeError: list expected at most 1 argument, got 2

************let's find out about print_sorted function too

    >>> my_list = mylist()
    >>> print(my_list.print_sorted)
    <bound method MyList.print_sorted of []>

    >>> my_list.print_sorted(1)
    Traceback (most recent call last):
    TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

**************8if numbers and strings are tohter 

    >>> my_list = mylist([1, "haha", "Gelf", 5])
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    TypeError: '<' not supported between instances of 'str' and 'int'

This is A Function To Test "2-matrix_divided.py"

** first let's import the function it self.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

************************** Test for the matrix part onely the first argumet *************************************

********** let's test for numbers greter than zeor first *************************************************

***** test for all zero****************

    >>> matrix_divided([[0, 0, 0], [0, 0, 0], [0, 0, 0]], 3)
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

******* testing all normal number *********

    >>> matrix_divided([[2, 3, 4],[5, 6, 1], [1, 3, 5]], 2)
    [[1.0, 1.5, 2.0], [2.5, 3.0, 0.5], [0.5, 1.5, 2.5]]

********** testing for floating point numbers *********

    >>> matrix_divided([[1.3, 4.4, 8.4], [3.4, 8.5 , 1.2]], 4)
    [[0.33, 1.1, 2.1], [0.85, 2.12, 0.3]]

******** mixation of int and float number *************

    >>> matrix_divided([[3.4, 4, 33], [2.4, 9, 3.2], [5.4, 3, 999]], 10)
    [[0.34, 0.4, 3.3], [0.24, 0.9, 0.32], [0.54, 0.3, 99.9]]

******** let's test for negative number now **************

    >>> matrix_divided([[-1, -3, -6], [-4, -8, -12], [-1, -9, -7]], 69)
    [[-0.01, -0.04, -0.09], [-0.06, -0.12, -0.17], [-0.01, -0.13, -0.1]]

*********** let's test negative but float numbers ************

    >>> matrix_divided([[-1.3, -1.5, -6.6 ], [-3.0, -1.9, -7.8]], 11)
    [[-0.12, -0.14, -0.6], [-0.27, -0.17, -0.71]]


********************* let's test invalid matrix ************************

******** let's test some string ******

    >>> matrix = "something other than list"
    >>> print(matrix_divided(matrix, 69))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

********** let's test some none Value ************

    >>> print(matrix_divided(None, 69))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

********** let's try empty case **************

    >>> print(matrix_divided([], 69))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

*********** let's test empty list of lsit ***********

    >>> print(matrix_divided([[]], 69))
    [[]]

********* let's try list but not list of list **********8

    >>> print(matrix_divided([4, 4, 4], 69))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

********** let's test some thing being wrong in between *******************

    >>> print(matrix_divided([[1, 2, "haha"], [3, 4, 3]], 55))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


************ let's test diffent size matrix *************

    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 69))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

**************** let's test if something go wrong with the divisor *************

******* testing non int value for div ***************


    >>> print(matrix_divided([[2, 3, 4],[5, 6, 1], [1, 3, 5]], "something else"))
    Traceback (most recent call last):
    TypeError: div must be a number

********************* testing None for div *********************

    >>> print(matrix_divided([[2, 3, 4],[5, 6, 1], [1, 3, 5]], None))
    Traceback (most recent call last):
    TypeError: div must be a number

**************** testing zero for div ***********

    >>> print(matrix_divided([[2, 3, 4],[5, 6, 1], [1, 3, 5]], 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
